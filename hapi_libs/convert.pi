#pragma once

// Protocol definition for conversion services
#define $convert($from,$to) \
  2->1:$from; \
  1->2 \
  {^Error: \
    1->2:String; \
    $end; \
   ^Ok: \
    1->2:$to; \
    $end; \
  }

// string2int conversion of base 10 string representation of integers to their ordinal values
#define $string2int $convert(String,Int)
global $string2int string2int(1 pure, 2);
#define STRING2INT(str,val) HOST("{ if (", val, ") ", val, "->RemoveRef(); ", val, "=new libpi::Int(", str, "->GetValue()); }")
local pure service ServiceString2Int(string2int (1 of 2) s)
( s[2]>>str;
  Int val=0;
  STRING2INT(str,val) pure;
  s[2]<<^Ok<<val;
)
|
// string2int conversion of ordinal values to their base 10 string representation of integers
#define $int2string $convert(Int,String)
global $int2string int2string(1 pure, 2);
#define INT2STRING(i,val) HOST("{ if (", val, ") ", val, "->RemoveRef(); ", val, "=new libpi::String(", i, "->ToString()); }")
local pure service ServiceInt2String(int2string (1 of 2) s)
( s[2]>>i;
  String val="";
  INT2STRING(i,val) pure;
  s[2]<<^Ok<<val;
)
|
