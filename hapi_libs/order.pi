#pragma once
#define $order($val) \
  rec $order; \
  2->1 \
  {^eq: \
    2->1: $val; \
    2->1: $val; \
    1->2: Bool; \
    $order; \
   ^leq: \
    2->1: $val; \
    2->1: $val; \
    1->2: Bool; \
    $order; \
   ^geq: \
    2->1: $val; \
    2->1: $val; \
    1->2: Bool; \
    $order; \
   ^less: \
    2->1: $val; \
    2->1: $val; \
    1->2: Bool; \
    $order; \
   ^greater: \
    2->1: $val; \
    2->1: $val; \
    1->2: Bool; \
    $order; \
   ^end: \
    $end; \
  }
#define stdorder(TYPE,NAME) \
global $order(TYPE) stdorder_ ## NAME (1 pure,2); \
local pure service StdOrder ## NAME (stdorder_ ## NAME (1 of 2) s) \
( local pure X($order(TYPE)(1 of 1 pure,2) s) \
  ( s[2]>> \
    {^eq: \
      s[2]>>lhs>>rhs; \
      s[2]<<lhs=rhs; \
      X(s); \
     ^leq: \
      s[2]>>lhs>>rhs; \
      s[2]<<lhs<=rhs; \
      X(s); \
     ^geq: \
      s[2]>>lhs>>rhs; \
      s[2]<<lhs>=rhs; \
      X(s); \
     ^less: \
      s[2]>>lhs>>rhs; \
      s[2]<<lhs<rhs; \
      X(s); \
     ^greater: \
      s[2]>>lhs>>rhs; \
      s[2]<<rhs<lhs; \
      X(s); \
     ^end: \
    } \
  ) \
  X(s); \
) \
|

stdorder(Int,Int)

stdorder(Float,Float)

stdorder(String,String)

stdorder(unsafe Int,uInt)
