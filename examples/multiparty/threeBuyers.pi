// twoBuyers protocol: Participants: 1 is Buyer1, 2 is Seller and 3 is Buyer2 {{{
#define $twoBuyers \
  1->2: String; /* title */ \
  2->1: Int; /* quote */ \
  2->3: Int; /* quote */ \
  1->3: Int; /* contrib */ \
  $twoBuyersResponse
#define $twoBuyersResponse \
  3->2 \
  {^ok: \
    3->2: String; /* address */ \
    2->3: String; /* date */ \
    $end; \
   ^quit: \
    $end; \
  }
// }}}
global $twoBuyers twoBuyers(1,2,3);
b1 = new twoBuyers(1 of 3); // First Buyer{{{
Int maxContrib=50;
b1[2]<<"BookTitle";
b1[2]>>quote;
if quote<=2*maxContrib
then b1[3]<<quote/2;
else b1[3]<<maxContrib;
// }}}
|
s = new twoBuyers(2 of 3); // Seller {{{
s[1]>>title;
Int price=75; // Calc price from title
s[1]<<price;
s[3]<<price;
s[3]>>
{^ok:
  s[3]>>dest;
  s[3]<<"Tomorrow";
 ^quit:
}
// }}}
|
// thirdBuyer protocol: Participants: 1 is extra buyer, 2 is existing buyer {{{
#define $thirdBuyer \
  2->1: Int; /* remaining price */ \
  2->1: $twoBuyersResponse(3 of 1,2,3); \
  1->2 \
  {^ok: \
    $end; \
   ^quit: \
    $end; \
  }
// }}}
global $thirdBuyer thirdBuyer(1,2);
b2 = new twoBuyers(3 of 3); // Second Buyer{{{
Int maxPrice=50;
b2[2]>>quote;
b2[1]>>contrib;
s=new thirdBuyer(2 of 2);
Int price=quote-contrib;
if price/2<=maxPrice
then s[1]<<price/2<<b2;
     s[1]>>
     {^ok:
      ^quit:
     }
else s[1]<<price-maxPrice<<b2;
     s[1]>>
     {^ok:
      ^quit:
     }
// }}}
|
b3 = new thirdBuyer(1 of 2); // Third Buyer {{{
Int maxContrib=30;
b3[2]>>price>>s;
if price<=maxContrib
then s[2]<<^ok<<"My address";
     s[2]>>date;
     b3[2]<<^ok;
else s[2]<<^quit;
     b3[2]<<^quit;
// }}}
